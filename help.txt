ParPar
High performance PAR2 creation tool
-----------------------------------

Usage: parpar {-s <blocksize> | -b <count>} -o <output> [options] [--] <input1> [<input2>...]

Unless otherwise specified, all options take one parameter.

PAR2 Options:

  -s,  --slice-size          Slice/block size to use.
  -b,  --slice-count         Number of input slices/blocks. Cannot be used with
                             `--slice-size`.
  -r,  --recovery-slices     Number of recovery slices to generate. You can
                             append a suffix to auto-calculate this, as in the
                             following examples:
                                 `-r100`: generates 100 recovery slices
                                 `-r15%`: generates at least 15% recovery
                                 `-r2.5M`: generates at least 2.5MB of recovery
                             Default is 0, which generates no recovery.
  -e,  --recovery-offset     Recovery slice start offset. Default 0.
  -c,  --comment             Add PAR2 comment. Can be specified multiple times.
       --packet-redundancy   How critical packets are repeated, can be either:
                                 none: only store a single copy of packets
                                 pow2: repeat packets in a power-of-2 fashion
                                       amongst recovery packets
                             Default is `pow2`.
       --filepath-format     How to format input file paths, can be either:
                                 basename: discard paths
                                 keep: retain full paths
                                 common: discard common parts of paths
                             Default is `common`.
       --unicode             Whether to force PAR2 unicode packets to be
                             generated. If set, unicode packets will always be
                             generated. If explicitly unset (`--no-unicode`),
                             will force unicode packets to never by generated.
                             Default is to auto detect.

Output Options:

  -o,  --out                 Base PAR2 file name. A .par2 extension will be
                             appeneded if not supplied.
  -O,  --overwrite           Overwrite existing files if they exist. This
                             option doesn't take any parameters.
  -n,  --alt-naming-scheme   Use alternative naming scheme for recovery files,
                             popularized by par2cmdline. Output names will look
                             like xxx.vol12+10.par2 instead of
                             xxx.vol12-22.par2
                             This option doesn't take any parameters.
  -d,  --slice-dist          Specify how recovery slices are distributed
                             amongst output files. Can be:
                                 equal: equal sized files (default)
                                 pow2: power-of-2 sizing scheme
  -p,  --slices-per-file     Specify the maximum number of slices each file
                             may contain. Default 65536
  -i,  --index               Output an index file (file with no recovery
                             blocks). Default enabled, use `--no-index` to
                             disable.

Performance Options:

  -m,  --memory              Maximum amount of memory to use for recovery
                             slices. If all recovery slices cannot be held in
                             memory, ParPar will run multiple passes on input
                             data to generate recovery, so increasing this
                             value as much as possible, will greatly improve
                             performance. Default `256M`.
  -t,  --threads             Limit number of threads to use. Default equals
                             number of CPU cores.
       --min-chunk-size      Minimum chunking size. Set to 0 to disable
                             chunking. This is a tradeoff between sequential
                             and random I/O. It is preferrable to use larger
                             values (or 0) on hard disks, where random I/O is
                             slow, but smaller values on flash based storage,
                             where random I/O is faster.
                             Default `128K`.
       --proc-batch-size     Number of slices to submit as a job for GF
                             calculation. Default is
                             max(`--threads`*16, ceil(4M/chunk-size))
       --proc-buffer-size    Number of additional slices to buffer. Set to 0
                             to disable bufferring. Default equals
                             `--proc-batch-size`
       --method              Algorithm for performing GF multiplies. Process
                             can crash if CPU does not support selected method.
                             Choices are:
                                 lh_lookup: split 2x 8-bit scalar table lookup
                                 xor: vector XOR bit dependencies using JIT
                                 xor128: force SSE2 variant of `xor`
                                 xor256: force AVX2 variant of `xor`
                                 xor512: force AVX512BW variant of `xor`
                                 shuffle: split 4x 4-bit vector table lookup
                                 shuffle128: force SSSE3 variant of `shuffle`
                                 shuffle256: force AVX2 variant of `shuffle`
                                 shuffle512: force AVX512BW variant of `shuffle`
                                 affine: split 2x 8-bit vector XOR dependencies
                                 affine128: force GFNI variant of `affine`
                                 affine512: force AVX512BW + GFNI `affine`
                             Default is auto-detected. This option should
                             generally never be changed, and left at default.

UI Options:

  All of the following options take no parameters.

  -q,  --quiet               Suppress information output
  -?,  --help                Displays this list of options
       --version             Print application version number and exit

Input Files:

  Additional arguments are taken as files to be processed.

  -R,  --recurse             If specified, recurse into subdirectories. This
                             option takes no values.

------------------
Examples

  parpar -s 1M -r 64 -o my_recovery.par2 file1 file2
      Generate 64MB of PAR2 recovery files from file1 and file2, named "my_recovery"
